<!DOCTYPE html>
<html lang="ee">
<head>
    <meta name="Eesti meedia printerite monitooring" content="Author: O. Pihlak">
    <title>Eesti Meedia Printerid</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="theme-color" content="#71C1EA">
    <link rel="shortcut icon" type="image/x-icon" href="/images/favicon.ico">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link href="/manifest.json" rel="manifest">
    <link href="/css/style.css" rel="stylesheet" type="text/css">
</head>
<body>


<!--<div id="loader-wrapper">
    <div id="loader">
        <div id="favicon-loader"></div>
    </div>

    <div class="loader-section section-left"></div>
    <div class="loader-section section-right"></div>

</div>-->
<div id="content">
    <header>
        <nav class="navBar">
            <ul class="navMenu">
                <li class="menuItem">
                    <a class="itemLink first" href="/">
                        <!--glyphicon glyphicon-print-->
                        <span class="glyphicon glyphicon-home itemIcon"></span>
                        Printerid
                    </a>
                </li>
                <li class="menuItem">
                    <a class="itemLink " href="/admin">
                        <span class="glyphicon glyphicon glyphicon-th-list itemIcon"></span>
                        Admin
                    </a>
                </li>
            </ul>
        </nav>
    </header>
    <main>
        {{{body}}}
    </main>
</div>


<!--<script>
    if (navigator.serviceWorker) {
        navigator.serviceWorker.register('/service-worker.js', {scope: './'}).then(function (registration) {
            console.log('Service worker registration succeeded:', registration);
            if(!navigator.serviceWorker.controller){
            }
           /* if(req.waiting){
                indexController._trackInstalling(req.installing);
                return;
            }

            req.addEventListener('updatefound', ()=>{
                indexController._trackInstalling(req.installing);
                return;
            });

            IndexController.prototype._trackInstalling = worker =>{
                let indexController = this;
                worker.addEventListener('statechange',()=>{
                    if(worker.state == 'installed'){
                        indexController._updateReady();
                    }
                })
            }*/
        }).catch(function (error) {
            console.log('Service worker registration failed:', error);
        });
    } else {
        console.log('Service workers are not supported.');
    }

/*
    if (!('fetch' in window)) {
        console.log('Fetch API not found, try including the polyfill');
    }
    fetch('/manifest.json')
            .then(function (response) {
                if (!response.ok) {
                    throw Error(response.statusText);
                }
                // Do stuff with the response
            })
            .catch(function (error) {
                console.log('Looks like there was a problem: \n', error);
            });*/
</script>-->
<script src="/framework/jquery-3.3.1.min.js"></script>
<script>window.jQuery || document.write('<script src="js/vendor/jquery-1.9.1.min.js"><\/script>')</script>
<script src="/js/client/front-end.js"></script>
</body>
</html>